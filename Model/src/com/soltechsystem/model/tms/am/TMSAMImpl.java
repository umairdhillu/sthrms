package com.soltechsystem.model.tms.am;

import com.soltechsystem.model.tms.am.common.TMSAM;

import java.sql.CallableStatement;
import java.sql.Types;

import oracle.adf.share.ADFContext;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 30 14:26:26 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TMSAMImpl extends ApplicationModuleImpl implements TMSAM {
    /**
     * This is the default constructor (do not remove).
     */
    public TMSAMImpl() {
    }

    /**
     * Container's getter for HrEmployeePolicyView1.
     * @return HrEmployeePolicyView1
     */
    public ViewObjectImpl getHrEmployeePolicyView1() {
        return (ViewObjectImpl) findViewObject("HrEmployeePolicyView1");
    }

    /**
     * Container's getter for EmployeeShiftsView1.
     * @return EmployeeShiftsView1
     */
    public ViewObjectImpl getEmployeeShiftsView1() {
        return (ViewObjectImpl) findViewObject("EmployeeShiftsView1");
    }

    /**
     * Container's getter for ShiftAssignParameterForm1.
     * @return ShiftAssignParameterForm1
     */
    public ViewObjectImpl getShiftAssignParameterForm1() {
        return (ViewObjectImpl) findViewObject("ShiftAssignParameterForm1");
    }

    public void generateRoster(String employeeID, String departmentID) {
        CallableStatement cst = null;
        try {
            cst = getDBTransaction().createCallableStatement("{call generate_roster(?,?)}", 0);

            cst.setString(1, employeeID);
            cst.setString(2, departmentID);

            cst.executeUpdate();


        } catch (Exception ex) {
            ex.printStackTrace();


        }
    }

    public void processAttendance() {
        CallableStatement cst = null;
        try {
            cst = getDBTransaction().createCallableStatement("{call sthrms.process_attendance()}", 0);

            cst.executeUpdate();


        } catch (Exception ex) {
            ex.printStackTrace();


        }
    }

    public void assignShift(String employeeID, String departmentID, String shiftID) {
        CallableStatement cst = null;
        try {
            cst = getDBTransaction().createCallableStatement("{call sthrms.sthrms_utils.ASSIGN_SHIFTS(?,?,?)}", 0);

            cst.setString(1, employeeID);
            cst.setString(2, departmentID);
            cst.setString(3, shiftID);
            cst.executeUpdate();


        } catch (Exception ex) {
            ex.printStackTrace();


        }
    }
    
    public void grantLeaves(String employeeID, String departmentID) {
        CallableStatement cst = null;
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();
        
        
        try {
            cst = getDBTransaction().createCallableStatement("{call sthrms.grant_leaves(?,?,?,?)}", 0);

            cst.setString(1, employeeID);
            cst.setString(2, departmentID);
            cst.setDate(3, new java.sql.Date(System.currentTimeMillis()));
            cst.setString(4,userid );
            
            cst.executeUpdate();


        } catch (Exception ex) {
            ex.printStackTrace();


        }
    }

    /**
     * Container's getter for ShiftsAll1.
     * @return ShiftsAll1
     */
    public ViewObjectImpl getShiftsAll1() {
        return (ViewObjectImpl) findViewObject("ShiftsAll1");
    }

    /**
     * Container's getter for AutoAttendanceParameterForm1.
     * @return AutoAttendanceParameterForm1
     */
    public ViewObjectImpl getAutoAttendanceParameterForm1() {
        return (ViewObjectImpl) findViewObject("AutoAttendanceParameterForm1");
    }

    /**
     * Container's getter for EmployeeInoutInterfaceView1.
     * @return EmployeeInoutInterfaceView1
     */
    public ViewObjectImpl getEmployeeInoutInterfaceView1() {
        return (ViewObjectImpl) findViewObject("EmployeeInoutInterfaceView1");
    }

    /**
     * Container's getter for AttendanceView1.
     * @return AttendanceView1
     */
    public ViewObjectImpl getAttendanceView1() {
        return (ViewObjectImpl) findViewObject("AttendanceView1");
    }

    /**
     * Container's getter for LeaveGrantParameterForm1.
     * @return LeaveGrantParameterForm1
     */
    public ViewObjectImpl getLeaveGrantParameterForm1() {
        return (ViewObjectImpl) findViewObject("LeaveGrantParameterForm1");
    }

    /**
     * Container's getter for LeaveBalances1.
     * @return LeaveBalances1
     */
    public ViewObjectImpl getLeaveBalances1() {
        return (ViewObjectImpl) findViewObject("LeaveBalances1");
    }
}

