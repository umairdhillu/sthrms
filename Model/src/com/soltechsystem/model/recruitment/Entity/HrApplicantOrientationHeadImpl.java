package com.soltechsystem.model.recruitment.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 24 16:26:10 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HrApplicantOrientationHeadImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        OrientationHeadId,
        ApplicationId,
        HeadId,
        Head,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORIENTATIONHEADID = AttributesEnum.OrientationHeadId.index();
    public static final int APPLICATIONID = AttributesEnum.ApplicationId.index();
    public static final int HEADID = AttributesEnum.HeadId.index();
    public static final int HEAD = AttributesEnum.Head.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HrApplicantOrientationHeadImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.recruitment.Entity.HrApplicantOrientationHead");
    }


    /**
     * Gets the attribute value for OrientationHeadId, using the alias name OrientationHeadId.
     * @return the value of OrientationHeadId
     */
    public BigDecimal getOrientationHeadId() {
        return (BigDecimal) getAttributeInternal(ORIENTATIONHEADID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrientationHeadId.
     * @param value value to set the OrientationHeadId
     */
    public void setOrientationHeadId(BigDecimal value) {
        setAttributeInternal(ORIENTATIONHEADID, value);
    }

    /**
     * Gets the attribute value for ApplicationId, using the alias name ApplicationId.
     * @return the value of ApplicationId
     */
    public BigDecimal getApplicationId() {
        return (BigDecimal) getAttributeInternal(APPLICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplicationId.
     * @param value value to set the ApplicationId
     */
    public void setApplicationId(BigDecimal value) {
        setAttributeInternal(APPLICATIONID, value);
    }

    /**
     * Gets the attribute value for HeadId, using the alias name HeadId.
     * @return the value of HeadId
     */
    public BigDecimal getHeadId() {
        return (BigDecimal) getAttributeInternal(HEADID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadId.
     * @param value value to set the HeadId
     */
    public void setHeadId(BigDecimal value) {
        setAttributeInternal(HEADID, value);
    }

    /**
     * Gets the attribute value for Head, using the alias name Head.
     * @return the value of Head
     */
    public String getHead() {
        return (String) getAttributeInternal(HEAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Head.
     * @param value value to set the Head
     */
    public void setHead(String value) {
        setAttributeInternal(HEAD, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }


    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * @param orientationHeadId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal orientationHeadId) {
        return new Key(new Object[] { orientationHeadId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

