package com.soltechsystem.model.recruitment.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 06 17:28:15 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HrVacanciesImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        VacancyId,
        VacancyTitle,
        Department,
        Designation,
        VacancyDate,
        RequiredDate,
        NoOfPosts,
        Experience,
        Qualification,
        DutiesAndResponsibilities,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int VACANCYID = AttributesEnum.VacancyId.index();
    public static final int VACANCYTITLE = AttributesEnum.VacancyTitle.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int DESIGNATION = AttributesEnum.Designation.index();
    public static final int VACANCYDATE = AttributesEnum.VacancyDate.index();
    public static final int REQUIREDDATE = AttributesEnum.RequiredDate.index();
    public static final int NOOFPOSTS = AttributesEnum.NoOfPosts.index();
    public static final int EXPERIENCE = AttributesEnum.Experience.index();
    public static final int QUALIFICATION = AttributesEnum.Qualification.index();
    public static final int DUTIESANDRESPONSIBILITIES = AttributesEnum.DutiesAndResponsibilities.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HrVacanciesImpl() {
    }

    /**
     * Gets the attribute value for VacancyId, using the alias name VacancyId.
     * @return the value of VacancyId
     */
    public BigDecimal getVacancyId() {
        return (BigDecimal) getAttributeInternal(VACANCYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VacancyId.
     * @param value value to set the VacancyId
     */
    public void setVacancyId(BigDecimal value) {
        setAttributeInternal(VACANCYID, value);
    }

    /**
     * Gets the attribute value for VacancyTitle, using the alias name VacancyTitle.
     * @return the value of VacancyTitle
     */
    public String getVacancyTitle() {
        return (String) getAttributeInternal(VACANCYTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VacancyTitle.
     * @param value value to set the VacancyTitle
     */
    public void setVacancyTitle(String value) {
        setAttributeInternal(VACANCYTITLE, value);
    }

    /**
     * Gets the attribute value for Department, using the alias name Department.
     * @return the value of Department
     */
    public BigDecimal getDepartment() {
        return (BigDecimal) getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Department.
     * @param value value to set the Department
     */
    public void setDepartment(BigDecimal value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for Designation, using the alias name Designation.
     * @return the value of Designation
     */
    public BigDecimal getDesignation() {
        return (BigDecimal) getAttributeInternal(DESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Designation.
     * @param value value to set the Designation
     */
    public void setDesignation(BigDecimal value) {
        setAttributeInternal(DESIGNATION, value);
    }

    /**
     * Gets the attribute value for VacancyDate, using the alias name VacancyDate.
     * @return the value of VacancyDate
     */
    public Timestamp getVacancyDate() {
        return (Timestamp) getAttributeInternal(VACANCYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VacancyDate.
     * @param value value to set the VacancyDate
     */
    public void setVacancyDate(Timestamp value) {
        setAttributeInternal(VACANCYDATE, value);
    }

    /**
     * Gets the attribute value for RequiredDate, using the alias name RequiredDate.
     * @return the value of RequiredDate
     */
    public Timestamp getRequiredDate() {
        return (Timestamp) getAttributeInternal(REQUIREDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequiredDate.
     * @param value value to set the RequiredDate
     */
    public void setRequiredDate(Timestamp value) {
        setAttributeInternal(REQUIREDDATE, value);
    }

    /**
     * Gets the attribute value for NoOfPosts, using the alias name NoOfPosts.
     * @return the value of NoOfPosts
     */
    public BigDecimal getNoOfPosts() {
        return (BigDecimal) getAttributeInternal(NOOFPOSTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfPosts.
     * @param value value to set the NoOfPosts
     */
    public void setNoOfPosts(BigDecimal value) {
        setAttributeInternal(NOOFPOSTS, value);
    }

    /**
     * Gets the attribute value for Experience, using the alias name Experience.
     * @return the value of Experience
     */
    public BigDecimal getExperience() {
        return (BigDecimal) getAttributeInternal(EXPERIENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Experience.
     * @param value value to set the Experience
     */
    public void setExperience(BigDecimal value) {
        setAttributeInternal(EXPERIENCE, value);
    }

    /**
     * Gets the attribute value for Qualification, using the alias name Qualification.
     * @return the value of Qualification
     */
    public String getQualification() {
        return (String) getAttributeInternal(QUALIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qualification.
     * @param value value to set the Qualification
     */
    public void setQualification(String value) {
        setAttributeInternal(QUALIFICATION, value);
    }

    /**
     * Gets the attribute value for DutiesAndResponsibilities, using the alias name DutiesAndResponsibilities.
     * @return the value of DutiesAndResponsibilities
     */
    public String getDutiesAndResponsibilities() {
        return (String) getAttributeInternal(DUTIESANDRESPONSIBILITIES);
    }

    /**
     * Sets <code>value</code> as the attribute value for DutiesAndResponsibilities.
     * @param value value to set the DutiesAndResponsibilities
     */
    public void setDutiesAndResponsibilities(String value) {
        setAttributeInternal(DUTIESANDRESPONSIBILITIES, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdationDate.
     * @param value value to set the UpdationDate
     */
    public void setUpdationDate(Timestamp value) {
        setAttributeInternal(UPDATIONDATE, value);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionNumber.
     * @param value value to set the VersionNumber
     */
    public void setVersionNumber(BigDecimal value) {
        setAttributeInternal(VERSIONNUMBER, value);
    }

    /**
     * @param vacancyId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal vacancyId) {
        return new Key(new Object[] { vacancyId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.recruitment.Entity.HrVacancies");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();


        switch (operation) {

        case DML_INSERT:


            setUpdatedBy(new BigDecimal(userid));
            setCreatedBy(new BigDecimal(userid));
        
            break;
        case DML_UPDATE:
            setUpdatedBy(new BigDecimal(userid));

        }
        super.doDML(operation, e);
    }
}

