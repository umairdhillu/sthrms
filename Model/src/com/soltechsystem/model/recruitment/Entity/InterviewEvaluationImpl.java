package com.soltechsystem.model.recruitment.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 20 15:38:45 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InterviewEvaluationImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        InterviewEvaluationId,
        ApplicationId,
        InterviewDate,
        InterviewVenue,
        Recommendations,
        SpecificJobKnowledge,
        RelatedJobExperience,
        Dynamism,
        CommunicationSkills,
        ConfidenceLevel,
        Apperance,
        Strengths,
        Weakness,
        AdditionalComments,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int INTERVIEWEVALUATIONID = AttributesEnum.InterviewEvaluationId.index();
    public static final int APPLICATIONID = AttributesEnum.ApplicationId.index();
    public static final int INTERVIEWDATE = AttributesEnum.InterviewDate.index();
    public static final int INTERVIEWVENUE = AttributesEnum.InterviewVenue.index();
    public static final int RECOMMENDATIONS = AttributesEnum.Recommendations.index();
    public static final int SPECIFICJOBKNOWLEDGE = AttributesEnum.SpecificJobKnowledge.index();
    public static final int RELATEDJOBEXPERIENCE = AttributesEnum.RelatedJobExperience.index();
    public static final int DYNAMISM = AttributesEnum.Dynamism.index();
    public static final int COMMUNICATIONSKILLS = AttributesEnum.CommunicationSkills.index();
    public static final int CONFIDENCELEVEL = AttributesEnum.ConfidenceLevel.index();
    public static final int APPERANCE = AttributesEnum.Apperance.index();
    public static final int STRENGTHS = AttributesEnum.Strengths.index();
    public static final int WEAKNESS = AttributesEnum.Weakness.index();
    public static final int ADDITIONALCOMMENTS = AttributesEnum.AdditionalComments.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InterviewEvaluationImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.recruitment.Entity.InterviewEvaluation");
    }

    /**
     * Gets the attribute value for InterviewEvaluationId, using the alias name InterviewEvaluationId.
     * @return the value of InterviewEvaluationId
     */
    public BigDecimal getInterviewEvaluationId() {
        return (BigDecimal) getAttributeInternal(INTERVIEWEVALUATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterviewEvaluationId.
     * @param value value to set the InterviewEvaluationId
     */
    public void setInterviewEvaluationId(BigDecimal value) {
        setAttributeInternal(INTERVIEWEVALUATIONID, value);
    }

    /**
     * Gets the attribute value for ApplicationId, using the alias name ApplicationId.
     * @return the value of ApplicationId
     */
    public BigDecimal getApplicationId() {
        return (BigDecimal) getAttributeInternal(APPLICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplicationId.
     * @param value value to set the ApplicationId
     */
    public void setApplicationId(BigDecimal value) {
        setAttributeInternal(APPLICATIONID, value);
    }

    /**
     * Gets the attribute value for InterviewDate, using the alias name InterviewDate.
     * @return the value of InterviewDate
     */
    public Timestamp getInterviewDate() {
        return (Timestamp) getAttributeInternal(INTERVIEWDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterviewDate.
     * @param value value to set the InterviewDate
     */
    public void setInterviewDate(Timestamp value) {
        setAttributeInternal(INTERVIEWDATE, value);
    }

    /**
     * Gets the attribute value for InterviewVenue, using the alias name InterviewVenue.
     * @return the value of InterviewVenue
     */
    public String getInterviewVenue() {
        return (String) getAttributeInternal(INTERVIEWVENUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterviewVenue.
     * @param value value to set the InterviewVenue
     */
    public void setInterviewVenue(String value) {
        setAttributeInternal(INTERVIEWVENUE, value);
    }

    /**
     * Gets the attribute value for Recommendations, using the alias name Recommendations.
     * @return the value of Recommendations
     */
    public String getRecommendations() {
        return (String) getAttributeInternal(RECOMMENDATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Recommendations.
     * @param value value to set the Recommendations
     */
    public void setRecommendations(String value) {
        setAttributeInternal(RECOMMENDATIONS, value);
    }

    /**
     * Gets the attribute value for SpecificJobKnowledge, using the alias name SpecificJobKnowledge.
     * @return the value of SpecificJobKnowledge
     */
    public String getSpecificJobKnowledge() {
        return (String) getAttributeInternal(SPECIFICJOBKNOWLEDGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SpecificJobKnowledge.
     * @param value value to set the SpecificJobKnowledge
     */
    public void setSpecificJobKnowledge(String value) {
        setAttributeInternal(SPECIFICJOBKNOWLEDGE, value);
    }

    /**
     * Gets the attribute value for RelatedJobExperience, using the alias name RelatedJobExperience.
     * @return the value of RelatedJobExperience
     */
    public String getRelatedJobExperience() {
        return (String) getAttributeInternal(RELATEDJOBEXPERIENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RelatedJobExperience.
     * @param value value to set the RelatedJobExperience
     */
    public void setRelatedJobExperience(String value) {
        setAttributeInternal(RELATEDJOBEXPERIENCE, value);
    }

    /**
     * Gets the attribute value for Dynamism, using the alias name Dynamism.
     * @return the value of Dynamism
     */
    public String getDynamism() {
        return (String) getAttributeInternal(DYNAMISM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dynamism.
     * @param value value to set the Dynamism
     */
    public void setDynamism(String value) {
        setAttributeInternal(DYNAMISM, value);
    }

    /**
     * Gets the attribute value for CommunicationSkills, using the alias name CommunicationSkills.
     * @return the value of CommunicationSkills
     */
    public String getCommunicationSkills() {
        return (String) getAttributeInternal(COMMUNICATIONSKILLS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommunicationSkills.
     * @param value value to set the CommunicationSkills
     */
    public void setCommunicationSkills(String value) {
        setAttributeInternal(COMMUNICATIONSKILLS, value);
    }

    /**
     * Gets the attribute value for ConfidenceLevel, using the alias name ConfidenceLevel.
     * @return the value of ConfidenceLevel
     */
    public String getConfidenceLevel() {
        return (String) getAttributeInternal(CONFIDENCELEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConfidenceLevel.
     * @param value value to set the ConfidenceLevel
     */
    public void setConfidenceLevel(String value) {
        setAttributeInternal(CONFIDENCELEVEL, value);
    }

    /**
     * Gets the attribute value for Apperance, using the alias name Apperance.
     * @return the value of Apperance
     */
    public String getApperance() {
        return (String) getAttributeInternal(APPERANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Apperance.
     * @param value value to set the Apperance
     */
    public void setApperance(String value) {
        setAttributeInternal(APPERANCE, value);
    }

    /**
     * Gets the attribute value for Strengths, using the alias name Strengths.
     * @return the value of Strengths
     */
    public String getStrengths() {
        return (String) getAttributeInternal(STRENGTHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Strengths.
     * @param value value to set the Strengths
     */
    public void setStrengths(String value) {
        setAttributeInternal(STRENGTHS, value);
    }

    /**
     * Gets the attribute value for Weakness, using the alias name Weakness.
     * @return the value of Weakness
     */
    public String getWeakness() {
        return (String) getAttributeInternal(WEAKNESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Weakness.
     * @param value value to set the Weakness
     */
    public void setWeakness(String value) {
        setAttributeInternal(WEAKNESS, value);
    }

    /**
     * Gets the attribute value for AdditionalComments, using the alias name AdditionalComments.
     * @return the value of AdditionalComments
     */
    public String getAdditionalComments() {
        return (String) getAttributeInternal(ADDITIONALCOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AdditionalComments.
     * @param value value to set the AdditionalComments
     */
    public void setAdditionalComments(String value) {
        setAttributeInternal(ADDITIONALCOMMENTS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * @param interviewEvaluationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal interviewEvaluationId) {
        return new Key(new Object[] { interviewEvaluationId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();


        switch (operation) {

        case DML_INSERT:


            setUpdatedBy(new BigDecimal(userid));
            setCreatedBy(new BigDecimal(userid));
        
            break;
        case DML_UPDATE:
            setUpdatedBy(new BigDecimal(userid));

        }
        super.doDML(operation, e);
    }
}

