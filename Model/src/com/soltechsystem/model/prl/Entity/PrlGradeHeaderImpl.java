package com.soltechsystem.model.prl.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 11 20:33:14 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrlGradeHeaderImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        GradeHeaderId,
        GradeName,
        MinSalary,
        MaxSalary,
        IncrementType,
        Val,
        GrossSalary,
        BasicSalary,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int GRADEHEADERID = AttributesEnum.GradeHeaderId.index();
    public static final int GRADENAME = AttributesEnum.GradeName.index();
    public static final int MINSALARY = AttributesEnum.MinSalary.index();
    public static final int MAXSALARY = AttributesEnum.MaxSalary.index();
    public static final int INCREMENTTYPE = AttributesEnum.IncrementType.index();
    public static final int VAL = AttributesEnum.Val.index();
    public static final int GROSSSALARY = AttributesEnum.GrossSalary.index();
    public static final int BASICSALARY = AttributesEnum.BasicSalary.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrlGradeHeaderImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.prl.Entity.PrlGradeHeader");
    }

    /**
     * Gets the attribute value for GradeHeaderId, using the alias name GradeHeaderId.
     * @return the value of GradeHeaderId
     */
    public BigDecimal getGradeHeaderId() {
        return (BigDecimal) getAttributeInternal(GRADEHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeHeaderId.
     * @param value value to set the GradeHeaderId
     */
    public void setGradeHeaderId(BigDecimal value) {
        setAttributeInternal(GRADEHEADERID, value);
    }

    /**
     * Gets the attribute value for GradeName, using the alias name GradeName.
     * @return the value of GradeName
     */
    public String getGradeName() {
        return (String) getAttributeInternal(GRADENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeName.
     * @param value value to set the GradeName
     */
    public void setGradeName(String value) {
        setAttributeInternal(GRADENAME, value);
    }

    /**
     * Gets the attribute value for MinSalary, using the alias name MinSalary.
     * @return the value of MinSalary
     */
    public BigDecimal getMinSalary() {
        return (BigDecimal) getAttributeInternal(MINSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinSalary.
     * @param value value to set the MinSalary
     */
    public void setMinSalary(BigDecimal value) {
        setAttributeInternal(MINSALARY, value);
    }

    /**
     * Gets the attribute value for MaxSalary, using the alias name MaxSalary.
     * @return the value of MaxSalary
     */
    public BigDecimal getMaxSalary() {
        return (BigDecimal) getAttributeInternal(MAXSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxSalary.
     * @param value value to set the MaxSalary
     */
    public void setMaxSalary(BigDecimal value) {
        setAttributeInternal(MAXSALARY, value);
    }

    /**
     * Gets the attribute value for IncrementType, using the alias name IncrementType.
     * @return the value of IncrementType
     */
    public BigDecimal getIncrementType() {
        return (BigDecimal) getAttributeInternal(INCREMENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IncrementType.
     * @param value value to set the IncrementType
     */
    public void setIncrementType(BigDecimal value) {
        setAttributeInternal(INCREMENTTYPE, value);
    }

    /**
     * Gets the attribute value for Val, using the alias name Val.
     * @return the value of Val
     */
    public BigDecimal getVal() {
        return (BigDecimal) getAttributeInternal(VAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Val.
     * @param value value to set the Val
     */
    public void setVal(BigDecimal value) {
        setAttributeInternal(VAL, value);
    }

    /**
     * Gets the attribute value for GrossSalary, using the alias name GrossSalary.
     * @return the value of GrossSalary
     */
    public BigDecimal getGrossSalary() {
        return (BigDecimal) getAttributeInternal(GROSSSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrossSalary.
     * @param value value to set the GrossSalary
     */
    public void setGrossSalary(BigDecimal value) {
        setAttributeInternal(GROSSSALARY, value);
    }

    /**
     * Gets the attribute value for BasicSalary, using the alias name BasicSalary.
     * @return the value of BasicSalary
     */
    public BigDecimal getBasicSalary() {
        return (BigDecimal) getAttributeInternal(BASICSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BasicSalary.
     * @param value value to set the BasicSalary
     */
    public void setBasicSalary(BigDecimal value) {
        setAttributeInternal(BASICSALARY, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * @param gradeHeaderId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal gradeHeaderId) {
        return new Key(new Object[] { gradeHeaderId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();


        switch (operation) {

        case DML_INSERT:


            setUpdatedBy(new BigDecimal(userid));
            setCreatedBy(new BigDecimal(userid));

            break;
        case DML_UPDATE:
            setUpdatedBy(new BigDecimal(userid));

        }
        super.doDML(operation, e);
    }
}

