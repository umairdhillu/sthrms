package com.soltechsystem.model.hr.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 23 14:56:27 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HrEmployeeAssetsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssetId,
        AssetType,
        PurchaseDate,
        PurchaseValue,
        EffectiveStartDate,
        EffectiveEndDate,
        EffectiveFrom,
        UsageType,
        AssetInfo1,
        AssetInfo2,
        AssetInfo3,
        AssetInfo4,
        AssetInfo5,
        Attrib1,
        Attrib2,
        Attrib3,
        Attrib4,
        Attrib5,
        Col1,
        Col2,
        Col3,
        Col4,
        Col5,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber,
        EmployeeId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int ASSETTYPE = AttributesEnum.AssetType.index();
    public static final int PURCHASEDATE = AttributesEnum.PurchaseDate.index();
    public static final int PURCHASEVALUE = AttributesEnum.PurchaseValue.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int USAGETYPE = AttributesEnum.UsageType.index();
    public static final int ASSETINFO1 = AttributesEnum.AssetInfo1.index();
    public static final int ASSETINFO2 = AttributesEnum.AssetInfo2.index();
    public static final int ASSETINFO3 = AttributesEnum.AssetInfo3.index();
    public static final int ASSETINFO4 = AttributesEnum.AssetInfo4.index();
    public static final int ASSETINFO5 = AttributesEnum.AssetInfo5.index();
    public static final int ATTRIB1 = AttributesEnum.Attrib1.index();
    public static final int ATTRIB2 = AttributesEnum.Attrib2.index();
    public static final int ATTRIB3 = AttributesEnum.Attrib3.index();
    public static final int ATTRIB4 = AttributesEnum.Attrib4.index();
    public static final int ATTRIB5 = AttributesEnum.Attrib5.index();
    public static final int COL1 = AttributesEnum.Col1.index();
    public static final int COL2 = AttributesEnum.Col2.index();
    public static final int COL3 = AttributesEnum.Col3.index();
    public static final int COL4 = AttributesEnum.Col4.index();
    public static final int COL5 = AttributesEnum.Col5.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HrEmployeeAssetsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.hr.Entity.HrEmployeeAssets");
    }


    /**
     * Gets the attribute value for AssetId, using the alias name AssetId.
     * @return the value of AssetId
     */
    public BigDecimal getAssetId() {
        return (BigDecimal) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetId.
     * @param value value to set the AssetId
     */
    public void setAssetId(BigDecimal value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for AssetType, using the alias name AssetType.
     * @return the value of AssetType
     */
    public BigDecimal getAssetType() {
        return (BigDecimal) getAttributeInternal(ASSETTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetType.
     * @param value value to set the AssetType
     */
    public void setAssetType(BigDecimal value) {
        setAttributeInternal(ASSETTYPE, value);
    }

    /**
     * Gets the attribute value for PurchaseDate, using the alias name PurchaseDate.
     * @return the value of PurchaseDate
     */
    public Timestamp getPurchaseDate() {
        return (Timestamp) getAttributeInternal(PURCHASEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PurchaseDate.
     * @param value value to set the PurchaseDate
     */
    public void setPurchaseDate(Timestamp value) {
        setAttributeInternal(PURCHASEDATE, value);
    }

    /**
     * Gets the attribute value for PurchaseValue, using the alias name PurchaseValue.
     * @return the value of PurchaseValue
     */
    public BigDecimal getPurchaseValue() {
        return (BigDecimal) getAttributeInternal(PURCHASEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PurchaseValue.
     * @param value value to set the PurchaseValue
     */
    public void setPurchaseValue(BigDecimal value) {
        setAttributeInternal(PURCHASEVALUE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the value of EffectiveStartDate
     */
    public Timestamp getEffectiveStartDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Timestamp value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the value of EffectiveEndDate
     */
    public Timestamp getEffectiveEndDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Timestamp value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public String getEffectiveFrom() {
        return (String) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(String value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for UsageType, using the alias name UsageType.
     * @return the value of UsageType
     */
    public BigDecimal getUsageType() {
        return (BigDecimal) getAttributeInternal(USAGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsageType.
     * @param value value to set the UsageType
     */
    public void setUsageType(BigDecimal value) {
        setAttributeInternal(USAGETYPE, value);
    }

    /**
     * Gets the attribute value for AssetInfo1, using the alias name AssetInfo1.
     * @return the value of AssetInfo1
     */
    public String getAssetInfo1() {
        return (String) getAttributeInternal(ASSETINFO1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetInfo1.
     * @param value value to set the AssetInfo1
     */
    public void setAssetInfo1(String value) {
        setAttributeInternal(ASSETINFO1, value);
    }

    /**
     * Gets the attribute value for AssetInfo2, using the alias name AssetInfo2.
     * @return the value of AssetInfo2
     */
    public String getAssetInfo2() {
        return (String) getAttributeInternal(ASSETINFO2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetInfo2.
     * @param value value to set the AssetInfo2
     */
    public void setAssetInfo2(String value) {
        setAttributeInternal(ASSETINFO2, value);
    }

    /**
     * Gets the attribute value for AssetInfo3, using the alias name AssetInfo3.
     * @return the value of AssetInfo3
     */
    public String getAssetInfo3() {
        return (String) getAttributeInternal(ASSETINFO3);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetInfo3.
     * @param value value to set the AssetInfo3
     */
    public void setAssetInfo3(String value) {
        setAttributeInternal(ASSETINFO3, value);
    }

    /**
     * Gets the attribute value for AssetInfo4, using the alias name AssetInfo4.
     * @return the value of AssetInfo4
     */
    public String getAssetInfo4() {
        return (String) getAttributeInternal(ASSETINFO4);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetInfo4.
     * @param value value to set the AssetInfo4
     */
    public void setAssetInfo4(String value) {
        setAttributeInternal(ASSETINFO4, value);
    }

    /**
     * Gets the attribute value for AssetInfo5, using the alias name AssetInfo5.
     * @return the value of AssetInfo5
     */
    public String getAssetInfo5() {
        return (String) getAttributeInternal(ASSETINFO5);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetInfo5.
     * @param value value to set the AssetInfo5
     */
    public void setAssetInfo5(String value) {
        setAttributeInternal(ASSETINFO5, value);
    }

    /**
     * Gets the attribute value for Attrib1, using the alias name Attrib1.
     * @return the value of Attrib1
     */
    public String getAttrib1() {
        return (String) getAttributeInternal(ATTRIB1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib1.
     * @param value value to set the Attrib1
     */
    public void setAttrib1(String value) {
        setAttributeInternal(ATTRIB1, value);
    }

    /**
     * Gets the attribute value for Attrib2, using the alias name Attrib2.
     * @return the value of Attrib2
     */
    public String getAttrib2() {
        return (String) getAttributeInternal(ATTRIB2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib2.
     * @param value value to set the Attrib2
     */
    public void setAttrib2(String value) {
        setAttributeInternal(ATTRIB2, value);
    }

    /**
     * Gets the attribute value for Attrib3, using the alias name Attrib3.
     * @return the value of Attrib3
     */
    public String getAttrib3() {
        return (String) getAttributeInternal(ATTRIB3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib3.
     * @param value value to set the Attrib3
     */
    public void setAttrib3(String value) {
        setAttributeInternal(ATTRIB3, value);
    }

    /**
     * Gets the attribute value for Attrib4, using the alias name Attrib4.
     * @return the value of Attrib4
     */
    public String getAttrib4() {
        return (String) getAttributeInternal(ATTRIB4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib4.
     * @param value value to set the Attrib4
     */
    public void setAttrib4(String value) {
        setAttributeInternal(ATTRIB4, value);
    }

    /**
     * Gets the attribute value for Attrib5, using the alias name Attrib5.
     * @return the value of Attrib5
     */
    public String getAttrib5() {
        return (String) getAttributeInternal(ATTRIB5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib5.
     * @param value value to set the Attrib5
     */
    public void setAttrib5(String value) {
        setAttributeInternal(ATTRIB5, value);
    }

    /**
     * Gets the attribute value for Col1, using the alias name Col1.
     * @return the value of Col1
     */
    public BigDecimal getCol1() {
        return (BigDecimal) getAttributeInternal(COL1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col1.
     * @param value value to set the Col1
     */
    public void setCol1(BigDecimal value) {
        setAttributeInternal(COL1, value);
    }

    /**
     * Gets the attribute value for Col2, using the alias name Col2.
     * @return the value of Col2
     */
    public BigDecimal getCol2() {
        return (BigDecimal) getAttributeInternal(COL2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col2.
     * @param value value to set the Col2
     */
    public void setCol2(BigDecimal value) {
        setAttributeInternal(COL2, value);
    }

    /**
     * Gets the attribute value for Col3, using the alias name Col3.
     * @return the value of Col3
     */
    public BigDecimal getCol3() {
        return (BigDecimal) getAttributeInternal(COL3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col3.
     * @param value value to set the Col3
     */
    public void setCol3(BigDecimal value) {
        setAttributeInternal(COL3, value);
    }

    /**
     * Gets the attribute value for Col4, using the alias name Col4.
     * @return the value of Col4
     */
    public BigDecimal getCol4() {
        return (BigDecimal) getAttributeInternal(COL4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col4.
     * @param value value to set the Col4
     */
    public void setCol4(BigDecimal value) {
        setAttributeInternal(COL4, value);
    }

    /**
     * Gets the attribute value for Col5, using the alias name Col5.
     * @return the value of Col5
     */
    public BigDecimal getCol5() {
        return (BigDecimal) getAttributeInternal(COL5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col5.
     * @param value value to set the Col5
     */
    public void setCol5(BigDecimal value) {
        setAttributeInternal(COL5, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(BigDecimal value) {
        setAttributeInternal(EMPLOYEEID, value);
    }


    /**
     * @param assetId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal assetId) {
        return new Key(new Object[] { assetId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();


        switch (operation) {

        case DML_INSERT:


            setUpdatedBy(new BigDecimal(userid));
            setCreatedBy(new BigDecimal(userid));
          
            break;
        case DML_UPDATE:
            setUpdatedBy(new BigDecimal(userid));

        }
        super.doDML(operation, e);
    }
}

