package com.soltechsystem.model.hr.Entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 07 19:23:06 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HrEmployeeQualificationImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        QualificationId,
        EmployeeId,
        QualificationType,
        InstituteName,
        Percentage,
        Grade,
        FromDat,
        ToDat,
        Attrib1,
        Attrib2,
        Attrib3,
        Attrib4,
        Attrib5,
        Col1,
        Col2,
        Col3,
        Col4,
        Col5,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber,
        Specialization,
        ScoreType,
        Score;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int QUALIFICATIONID = AttributesEnum.QualificationId.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int QUALIFICATIONTYPE = AttributesEnum.QualificationType.index();
    public static final int INSTITUTENAME = AttributesEnum.InstituteName.index();
    public static final int PERCENTAGE = AttributesEnum.Percentage.index();
    public static final int GRADE = AttributesEnum.Grade.index();
    public static final int FROMDAT = AttributesEnum.FromDat.index();
    public static final int TODAT = AttributesEnum.ToDat.index();
    public static final int ATTRIB1 = AttributesEnum.Attrib1.index();
    public static final int ATTRIB2 = AttributesEnum.Attrib2.index();
    public static final int ATTRIB3 = AttributesEnum.Attrib3.index();
    public static final int ATTRIB4 = AttributesEnum.Attrib4.index();
    public static final int ATTRIB5 = AttributesEnum.Attrib5.index();
    public static final int COL1 = AttributesEnum.Col1.index();
    public static final int COL2 = AttributesEnum.Col2.index();
    public static final int COL3 = AttributesEnum.Col3.index();
    public static final int COL4 = AttributesEnum.Col4.index();
    public static final int COL5 = AttributesEnum.Col5.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int SPECIALIZATION = AttributesEnum.Specialization.index();
    public static final int SCORETYPE = AttributesEnum.ScoreType.index();
    public static final int SCORE = AttributesEnum.Score.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HrEmployeeQualificationImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soltechsystem.model.hr.Entity.HrEmployeeQualification");
    }


    /**
     * Gets the attribute value for QualificationId, using the alias name QualificationId.
     * @return the value of QualificationId
     */
    public BigDecimal getQualificationId() {
        return (BigDecimal) getAttributeInternal(QUALIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for QualificationId.
     * @param value value to set the QualificationId
     */
    public void setQualificationId(BigDecimal value) {
        setAttributeInternal(QUALIFICATIONID, value);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(BigDecimal value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for QualificationType, using the alias name QualificationType.
     * @return the value of QualificationType
     */
    public BigDecimal getQualificationType() {
        return (BigDecimal) getAttributeInternal(QUALIFICATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for QualificationType.
     * @param value value to set the QualificationType
     */
    public void setQualificationType(BigDecimal value) {
        setAttributeInternal(QUALIFICATIONTYPE, value);
    }

    /**
     * Gets the attribute value for InstituteName, using the alias name InstituteName.
     * @return the value of InstituteName
     */
    public String getInstituteName() {
        return (String) getAttributeInternal(INSTITUTENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for InstituteName.
     * @param value value to set the InstituteName
     */
    public void setInstituteName(String value) {
        setAttributeInternal(INSTITUTENAME, value);
    }

    /**
     * Gets the attribute value for Percentage, using the alias name Percentage.
     * @return the value of Percentage
     */
    public BigDecimal getPercentage() {
        return (BigDecimal) getAttributeInternal(PERCENTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Percentage.
     * @param value value to set the Percentage
     */
    public void setPercentage(BigDecimal value) {
        setAttributeInternal(PERCENTAGE, value);
    }

    /**
     * Gets the attribute value for Grade, using the alias name Grade.
     * @return the value of Grade
     */
    public String getGrade() {
        return (String) getAttributeInternal(GRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Grade.
     * @param value value to set the Grade
     */
    public void setGrade(String value) {
        setAttributeInternal(GRADE, value);
    }

    /**
     * Gets the attribute value for FromDat, using the alias name FromDat.
     * @return the value of FromDat
     */
    public Timestamp getFromDat() {
        return (Timestamp) getAttributeInternal(FROMDAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDat.
     * @param value value to set the FromDat
     */
    public void setFromDat(Timestamp value) {
        setAttributeInternal(FROMDAT, value);
    }

    /**
     * Gets the attribute value for ToDat, using the alias name ToDat.
     * @return the value of ToDat
     */
    public Timestamp getToDat() {
        return (Timestamp) getAttributeInternal(TODAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDat.
     * @param value value to set the ToDat
     */
    public void setToDat(Timestamp value) {
        setAttributeInternal(TODAT, value);
    }

    /**
     * Gets the attribute value for Attrib1, using the alias name Attrib1.
     * @return the value of Attrib1
     */
    public String getAttrib1() {
        return (String) getAttributeInternal(ATTRIB1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib1.
     * @param value value to set the Attrib1
     */
    public void setAttrib1(String value) {
        setAttributeInternal(ATTRIB1, value);
    }

    /**
     * Gets the attribute value for Attrib2, using the alias name Attrib2.
     * @return the value of Attrib2
     */
    public String getAttrib2() {
        return (String) getAttributeInternal(ATTRIB2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib2.
     * @param value value to set the Attrib2
     */
    public void setAttrib2(String value) {
        setAttributeInternal(ATTRIB2, value);
    }

    /**
     * Gets the attribute value for Attrib3, using the alias name Attrib3.
     * @return the value of Attrib3
     */
    public String getAttrib3() {
        return (String) getAttributeInternal(ATTRIB3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib3.
     * @param value value to set the Attrib3
     */
    public void setAttrib3(String value) {
        setAttributeInternal(ATTRIB3, value);
    }

    /**
     * Gets the attribute value for Attrib4, using the alias name Attrib4.
     * @return the value of Attrib4
     */
    public String getAttrib4() {
        return (String) getAttributeInternal(ATTRIB4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib4.
     * @param value value to set the Attrib4
     */
    public void setAttrib4(String value) {
        setAttributeInternal(ATTRIB4, value);
    }

    /**
     * Gets the attribute value for Attrib5, using the alias name Attrib5.
     * @return the value of Attrib5
     */
    public String getAttrib5() {
        return (String) getAttributeInternal(ATTRIB5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attrib5.
     * @param value value to set the Attrib5
     */
    public void setAttrib5(String value) {
        setAttributeInternal(ATTRIB5, value);
    }

    /**
     * Gets the attribute value for Col1, using the alias name Col1.
     * @return the value of Col1
     */
    public BigDecimal getCol1() {
        return (BigDecimal) getAttributeInternal(COL1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col1.
     * @param value value to set the Col1
     */
    public void setCol1(BigDecimal value) {
        setAttributeInternal(COL1, value);
    }

    /**
     * Gets the attribute value for Col2, using the alias name Col2.
     * @return the value of Col2
     */
    public BigDecimal getCol2() {
        return (BigDecimal) getAttributeInternal(COL2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col2.
     * @param value value to set the Col2
     */
    public void setCol2(BigDecimal value) {
        setAttributeInternal(COL2, value);
    }

    /**
     * Gets the attribute value for Col3, using the alias name Col3.
     * @return the value of Col3
     */
    public BigDecimal getCol3() {
        return (BigDecimal) getAttributeInternal(COL3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col3.
     * @param value value to set the Col3
     */
    public void setCol3(BigDecimal value) {
        setAttributeInternal(COL3, value);
    }

    /**
     * Gets the attribute value for Col4, using the alias name Col4.
     * @return the value of Col4
     */
    public BigDecimal getCol4() {
        return (BigDecimal) getAttributeInternal(COL4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col4.
     * @param value value to set the Col4
     */
    public void setCol4(BigDecimal value) {
        setAttributeInternal(COL4, value);
    }

    /**
     * Gets the attribute value for Col5, using the alias name Col5.
     * @return the value of Col5
     */
    public BigDecimal getCol5() {
        return (BigDecimal) getAttributeInternal(COL5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Col5.
     * @param value value to set the Col5
     */
    public void setCol5(BigDecimal value) {
        setAttributeInternal(COL5, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * Gets the attribute value for Specialization, using the alias name Specialization.
     * @return the value of Specialization
     */
    public String getSpecialization() {
        return (String) getAttributeInternal(SPECIALIZATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Specialization.
     * @param value value to set the Specialization
     */
    public void setSpecialization(String value) {
        setAttributeInternal(SPECIALIZATION, value);
    }

    /**
     * Gets the attribute value for ScoreType, using the alias name ScoreType.
     * @return the value of ScoreType
     */
    public BigDecimal getScoreType() {
        return (BigDecimal) getAttributeInternal(SCORETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScoreType.
     * @param value value to set the ScoreType
     */
    public void setScoreType(BigDecimal value) {
        setAttributeInternal(SCORETYPE, value);
    }

    /**
     * Gets the attribute value for Score, using the alias name Score.
     * @return the value of Score
     */
    public String getScore() {
        return (String) getAttributeInternal(SCORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Score.
     * @param value value to set the Score
     */
    public void setScore(String value) {
        setAttributeInternal(SCORE, value);
    }

    /**
     * @param qualificationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal qualificationId) {
        return new Key(new Object[] { qualificationId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                   .getSessionScope()
                                   .get("userid") == null) ? "-1" : ADFContext.getCurrent()
                                                                              .getSessionScope()
                                                                              .get("userid")
                                                                              .toString();


        switch (operation) {

        case DML_INSERT:


            setUpdatedBy(new BigDecimal(userid));
            setCreatedBy(new BigDecimal(userid));
          
            break;
        case DML_UPDATE:
            setUpdatedBy(new BigDecimal(userid));

        }
        super.doDML(operation, e);
    }
}

